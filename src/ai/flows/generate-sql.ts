// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Translates natural language questions into SQL queries.
 *
 * - generateSQL - A function that translates natural language questions into SQL queries.
 * - GenerateSQLInput - The input type for the generateSQL function.
 * - GenerateSQLOutput - The return type for the generateSQL function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateSQLInputSchema = z.object({
  question: z.string().describe('The natural language question to translate into SQL.'),
  databaseSchema: z.string().describe('The schema of the database to query.'),
});
export type GenerateSQLInput = z.infer<typeof GenerateSQLInputSchema>;

const GenerateSQLOutputSchema = z.object({
  sqlQuery: z.string().describe('The generated SQL query.'),
});
export type GenerateSQLOutput = z.infer<typeof GenerateSQLOutputSchema>;

export async function generateSQL(input: GenerateSQLInput): Promise<GenerateSQLOutput> {
  return generateSQLFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateSQLPrompt',
  input: {schema: GenerateSQLInputSchema},
  output: {schema: GenerateSQLOutputSchema},
  prompt: `You are an expert SQL query generator. Given a question and a database schema, you will generate a SQL query that answers the question.

Question: {{{question}}}

Database Schema: {{{databaseSchema}}}

SQL Query: `,
});

const generateSQLFlow = ai.defineFlow(
  {
    name: 'generateSQLFlow',
    inputSchema: GenerateSQLInputSchema,
    outputSchema: GenerateSQLOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
